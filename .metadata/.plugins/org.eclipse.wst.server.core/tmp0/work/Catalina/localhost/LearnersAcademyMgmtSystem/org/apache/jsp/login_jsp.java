/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2022-10-18 08:50:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("\n");
      out.write("<title>Learners Academy</title>\n");
      out.write("<link\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css\"\n");
      out.write("	rel=\"stylesheet\"\n");
      out.write("	integrity=\"sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl\"\n");
      out.write("	crossorigin=\"anonymous\">\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("	<section class=\"h-100\">\n");
      out.write("		<div class=\"container h-100\">\n");
      out.write("			<div class=\"row justify-content-sm-center h-100\">\n");
      out.write("				<div class=\"col-xxl-4 col-xl-5 col-lg-5 col-md-7 col-sm-9\">\n");
      out.write("					<div class=\"text-center my-5\">\n");
      out.write("						\n");
      out.write("						<h1 class=\"fs-4 card-title fw-bold mb-4\">Learners Academy</h1>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"card shadow-lg\">\n");
      out.write("						<div class=\"card-body p-5\">\n");
      out.write("							<h4 class=\"fs-4 card-title mb-4\">Login</h4>\n");
      out.write("							\n");
      out.write("							<form method=\"POST\" class=\"needs-validation\" novalidate=\"\"\n");
      out.write("								autocomplete=\"off\" action=\"");
      out.print(request.getContextPath());
      out.write("/login\">\n");
      out.write("								<div class=\"mb-3\">\n");
      out.write("									<label class=\"mb-2 text-muted\" for=\"email\">User Name</label> <input id=\"userName\" type=\"text\" class=\"form-control\"\n");
      out.write("										name=\"userName\" value=\"\" required autofocus>\n");
      out.write("									<div class=\"invalid-feedback\">User name is required</div>\n");
      out.write("								</div>\n");
      out.write("\n");
      out.write("								<div class=\"mb-3\">\n");
      out.write("									<div class=\"mb-2 w-100\">\n");
      out.write("										<label class=\"text-muted\" for=\"password\">Password</label> <!-- <a\n");
      out.write("											href=\"forgot.html\" class=\"float-end\"> Forgot Password? </a> -->\n");
      out.write("									</div>\n");
      out.write("									<input id=\"password\" type=\"password\" class=\"form-control\"\n");
      out.write("										name=\"password\" required>\n");
      out.write("									<div class=\"invalid-feedback\">Password is required</div>\n");
      out.write("								</div>\n");
      out.write("\n");
      out.write("								<div class=\"d-flex align-items-center\">\n");
      out.write("									\n");
      out.write("									<button type=\"submit\" class=\"btn btn-primary ms-auto\">\n");
      out.write("										Login</button>\n");
      out.write("								</div>\n");
      out.write("								<div><p style=\"color: red;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.error}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p></div>\n");
      out.write("							</form>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"text-center mt-5 text-muted\">Copyright &copy;\n");
      out.write("						2021-2022 &mdash; Learners Academy</div>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</section>\n");
      out.write("\n");
      out.write("	<script src=\"js/login.js\"></script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
